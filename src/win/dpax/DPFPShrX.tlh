// Created by Microsoft (R) C/C++ Compiler Version 14.16.27032.1 (608c255e).
//
// C++ source equivalent of Win32 type library C:\\Program Files (x86)\\DigitalPersona\\Bin\\COM-ActiveX\\DPFPShrX.dll
// compiler-generated file created 08/21/19 at 06:38:54 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace DPFPShrXLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("b8fac44b-a9c5-478e-a9bf-566419996cae"))
/* LIBID */ __DPFPShrXLib;
enum DPFPCaptureFeedbackEnum;
struct __declspec(uuid("518b0981-e805-4734-809c-d9f03637183a"))
/* dual interface */ IDPFPData;
struct __declspec(uuid("7e0097ff-7b58-46f9-bbd6-3f91c53757a0"))
/* dual interface */ IDPFPSample;
struct __declspec(uuid("5929f2d9-8e34-4350-add7-f865ed9a19fd"))
/* dual interface */ IDPFPFeatureSet;
struct __declspec(uuid("737fd7a9-75ef-4b22-9014-8f13a10c48f2"))
/* dual interface */ IDPFPTemplate;
struct /* coclass */ DPFPFeatureSet;
struct /* coclass */ DPFPSample;
struct /* coclass */ DPFPTemplate;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IDPFPData, __uuidof(IDPFPData));
_COM_SMARTPTR_TYPEDEF(IDPFPSample, __uuidof(IDPFPSample));
_COM_SMARTPTR_TYPEDEF(IDPFPFeatureSet, __uuidof(IDPFPFeatureSet));
_COM_SMARTPTR_TYPEDEF(IDPFPTemplate, __uuidof(IDPFPTemplate));

//
// Type library items
//

enum DPFPCaptureFeedbackEnum
{
    CaptureFeedbackGood = 0,
    CaptureFeedbackNone = 1,
    CaptureFeedbackTooLight = 2,
    CaptureFeedbackTooDark = 3,
    CaptureFeedbackTooNoisy = 4,
    CaptureFeedbackLowContrast = 5,
    CaptureFeedbackNotEnoughFtrs = 6,
    CaptureFeedbackNoCentralRgn = 7,
    CaptureFeedbackNoFinger = 8,
    CaptureFeedbackTooHigh = 9,
    CaptureFeedbackTooLow = 10,
    CaptureFeedbackTooLeft = 11,
    CaptureFeedbackTooRight = 12,
    CaptureFeedbackTooStrange = 13,
    CaptureFeedbackTooFast = 14,
    CaptureFeedbackTooSkewed = 15,
    CaptureFeedbackTooShort = 16,
    CaptureFeedbackTooSlow = 17
};

struct __declspec(uuid("518b0981-e805-4734-809c-d9f03637183a"))
IDPFPData : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t Serialize ( );
    HRESULT Deserialize (
        const _variant_t & RawData );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Serialize (
        /*[out,retval]*/ VARIANT * pRawData ) = 0;
      virtual HRESULT __stdcall raw_Deserialize (
        /*[in]*/ VARIANT RawData ) = 0;
};

struct __declspec(uuid("7e0097ff-7b58-46f9-bbd6-3f91c53757a0"))
IDPFPSample : IDPFPData
{};

struct __declspec(uuid("5929f2d9-8e34-4350-add7-f865ed9a19fd"))
IDPFPFeatureSet : IDPFPData
{};

struct __declspec(uuid("737fd7a9-75ef-4b22-9014-8f13a10c48f2"))
IDPFPTemplate : IDPFPData
{};

struct __declspec(uuid("a93bfbd6-93a0-4dbd-92f8-0d2dd80f0824"))
DPFPFeatureSet;
    // [ default ] interface IDPFPFeatureSet

struct __declspec(uuid("d005543b-ea11-499d-b3ea-37266d74be79"))
DPFPSample;
    // [ default ] interface IDPFPSample

struct __declspec(uuid("3926dada-23cd-42bd-818e-2aaa37522307"))
DPFPTemplate;
    // [ default ] interface IDPFPTemplate

//
// Wrapper method implementations
//

#include "DPFPShrX.tli"

} // namespace DPFPShrXLib

#pragma pack(pop)
